<div class="page-header">
  <h1>
    API Documentation
    <small>Version {{ version }}</small>
  </h1>
</div>

<h1 id="methods">
  Methods
</h1>

<p>
Method paths begin with <code>/api</code>.

<p>
All methods return JSON bodies with the
<code>Content-Type: application/json</code> header. In the event of an error,
a JSON object containing an <code>error</code> key with the error message will
be returned.

<p>
For <code>POST</code> methods, parameters must be form-encoded, i.e. sent with
the <code>Content-Type: application/x-www-form-urlencoded</code> header.

<h2 id="meta">
  Meta
</h2>

<h3 id="meta/version">
  <code>meta/version</code>
  <span class="label label-default"
        title="Will not change in future API versions">
    frozen
  </span>
</h3>

<p>
Get the current version of the API.

<p>
<pre>
<span class="text-danger">GET</span> <a href="/api/meta/version">/api/meta/version</a>
</pre>

<p>
Returns a hash containing integer values in the <code>major</code>,
<code>minor</code> and <code>patch</code> keys, and a string representation in
the <code>string</code> key.

<p>
<pre>
{
    <span class="text-info">"major"</span>: <span class="text-danger">0</span>,
    <span class="text-info">"minor"</span>: <span class="text-danger">1</span>,
    <span class="text-info">"patch"</span>: <span class="text-danger">0</span>,
    <span class="text-info">"string"</span>: <span class="text-info">"0.1.0"</span>
}
</pre>

<h2 id="classification">
  Classification
</h2>

<h3 id="classify">
  <code>classify</code>
</h3>

<p>
Classify the language of a code sample.

<p>
<pre>
<span class="text-danger">POST</span> <span class="text-primary">/api/classify</span>
</pre>

<p>
<ul class="list-unstyled">
  <li><code>sample</code>: the code sample</li>
</ul>

<p>
Returns an array of language name strings, ordered most probable to least
probable.

<p>
<pre>
[
    <span class="text-info">"Ruby"</span>,
    <span class="text-info">"Clojure"</span>,
    <span class="text-info">"JavaScript"</span>,
    <span class="text-muted">...</span>
]
</pre>

<h3 id="classify/scores">
  <code>classify/scores</code>
</h3>

<p>
Classify the language of a code sample with normalized scores.

<p>
<pre>
<span class="text-danger">POST</span> <span class="text-primary">/api/classify/scores</span>
</pre>

<p>
<ul class="list-unstyled">
  <li><code>sample</code>: the code sample</li>
</ul>

<p>
Returns an array of pairs of language name strings and score floats, ordered
most probable to least probable. The scores are normalized such that the most
probable language has a score of 1.0, and all others have a score between 0.0
and 1.0.

<p>
<pre>
[
    [ <span class="text-info">"Ruby"</span>, <span class="text-danger">1.0</span> ],
    [ <span class="text-info">"Clojure"</span>, <span class="text-danger">0.78</span> ],
    [ <span class="text-info">"JavaScript"</span>, <span class="text-danger">0.48</span> ],
    <span class="text-muted">...</span>
]
</pre>

<h3 id="classify/raw">
  <code>classify/raw</code>
</h3>

<p>
Classify the language of a code sample with logarithmic probabilities.

<p>
<pre>
<span class="text-danger">POST</span> <span class="text-primary">/api/classify/raw</span>
</pre>

<p>
<ul class="list-unstyled">
  <li><code>sample</code>: the code sample</li>
</ul>

<p>
Returns a hash of language name strings to score floats. The scores are raw
logarithmic probabilities.

<p>
<pre>
{
    <span class="text-info">"Ruby"</span>: <span class="text-danger">-346.887</span>,
    <span class="text-info">"Clojure"</span>: <span class="text-danger">-476.993</span>,
    <span class="text-info">"JavaScript"</span>: <span class="text-danger">-877.438</span>,
    <span class="text-muted">...</span>
}
</pre>

<h2 id="statistics">
  Statistics
</h2>

<h3 id="stats">
  <code>stats</code>
</h3>

<p>
Get statistics totals.

<p>
<pre>
<span class="text-danger">GET</span> <a href="/api/stats">/api/stats</a>
</pre>

<p>
Returns a hash of field names to integer totals. Returned fields are
<code>languages</code>, <code>samples</code> and <code>tokens</code>.

<p>
<pre>
{
    <span class="text-info">"languages"</span>: <span class="text-danger">25</span>,
    <span class="text-info">"samples"</span>: <span class="text-danger">150</span>,
    <span class="text-info">"tokens"</span>: <span class="text-danger">2500</span>
}
</pre>

<h3 id="stats/languages">
  <code>stats/languages</code>
</h3>

<p>
Get number of samples, total tokens and unique token count for each language.

<p>
<pre>
<span class="text-danger">GET</span> <a href="/api/stats/languages">/api/stats/languages</a>
</pre>

<p>
Returns a hash of language name strings to hashes containing the
<code>samples</code>, <code>tokens</code> and <code>uniqueTokens</code> integer
fields.

<p>
<pre>
{
    <span class="text-info">"Ruby"</span>: {
        <span class="text-info">"samples"</span>: <span class="text-danger">2330</span>,
        <span class="text-info">"tokens"</span>: <span class="text-danger">1052089</span>,
        <span class="text-info">"uniqueTokens"</span>: <span class="text-danger">31387</span>
    },
    <span class="text-info">"Clojure"</span>: {
        <span class="text-info">"samples"</span>: <span class="text-danger">157</span>,
        <span class="text-info">"tokens"</span>: <span class="text-danger">69706</span>,
        <span class="text-info">"uniqueTokens"</span>: <span class="text-danger">3522</span>
    },
    <span class="text-info">"JavaScript"</span>: {
        <span class="text-info">"samples"</span>: <span class="text-danger">1582</span>,
        <span class="text-info">"tokens"</span>: <span class="text-danger">2575362</span>,
        <span class="text-info">"uniqueTokens"</span>: <span class="text-danger">24784</span>
    },
    <span class="text-muted">...</span>
}
</pre>

<h3 id="stats/tokens">
  <code>stats/tokens</code>
</h3>

<p>
Get the tokens of a language.

<p>
<pre>
<span class="text-danger">GET</span> <a href="/api/stats/tokens">/api/stats/tokens</a>
</pre>

<p>
<ul class="list-unstyled">
  <li><code>language</code>: the name of the language</li>
  <li><code>limit</code>: the number of tokens per page (default: 20, maximum: 1000)</li>
  <li><code>page</code>: the page number to return (default: 1)</li>
</ul>

<p>
Returns an array of <code>limit</code> token string and integer count pairs,
ordered from highest count to lowest.

<p>
<pre>
[
    [ <span class="text-info">"."</span>, <span class="text-danger">88949</span> ],
    [ <span class="text-info">":"</span>, <span class="text-danger">79322</span> ],
    [ <span class="text-info">","</span>, <span class="text-danger">71001</span> ],
    <span class="text-muted">...</span>
]
</pre>
